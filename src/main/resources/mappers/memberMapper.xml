<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.demo.mapper.MemberMapper">

	<select id="login" resultType="member">

			SELECT 
					MB_ID,
				   	MB_PW,
				   	MB_NM,
				   	MB_NICK,
				   	MB_PHONE,
					MB_EMAIL,
					MB_ZIP,
					MB_ADDR,
					MB_DEADDR,
					MB_MILE,
					MB_REGDT,
					MB_CONDT,
					MB_AUTHKEY,
					MB_AUTH
			FROM MEMBERS_TB 
			WHERE MB_ID=#{id}

	</select>
	
	<select id="loginFacebook" resultType="member">

			SELECT 
					MB_ID,
				   	MB_PW,
				   	MB_NM,
				   	MB_NICK,
				   	MB_PHONE,
					MB_EMAIL,
					MB_ZIP,
					MB_ADDR,
					MB_DEADDR,
					MB_MILE,
					MB_REGDT,
					MB_CONDT,
					MB_AUTHKEY,
					MB_AUTH
			FROM MEMBERS_TB
			WHERE MB_EMAIL=#{mbEmail}

	</select>
	
	<select id="getMember" resultType="member">

			SELECT 
					MB_ID,
				   	MB_PW,
				   	MB_NM,
				   	MB_NICK,
				   	MB_PHONE,
					MB_EMAIL,
					MB_ZIP,
					MB_ADDR,
					MB_DEADDR,
					MB_MILE,
					MB_REGDT,
					MB_CONDT,
					MB_AUTHKEY,
					MB_AUTH
			FROM MEMBERS_TB
			WHERE MB_ID=#{mbId}

	</select>
	
	<update id="updateAuth">

			UPDATE MEMBERS_TB
			SET MB_AUTH='Y'
			WHERE MB_ID=#{mbId}

	</update>

	<select id="checkId" resultType="int">

			SELECT COUNT(*)
			FROM MEMBERS_TB
			WHERE MB_ID=#{mbId}

	</select>
	
	<update id="updateConDate">

			UPDATE MEMBERS_TB
			SET MB_CONDT = SYSDATE
			WHERE MB_ID=#{id}

	</update>

	<insert id="insert">

			INSERT INTO MEMBERS_TB (
					MB_ID,
				   	MB_PW,
				   	MB_NM,
				   	MB_NICK,
				   	MB_PHONE,
					MB_EMAIL,
					MB_ZIP,
					MB_ADDR,
					MB_DEADDR,
					MB_AUTHKEY
			)
			VALUES (#{mbId}, #{mbPw}, #{mbNm}, #{mbNick}, #{mbPhone}, #{mbEmail}, 
					#{mbZip}, #{mbAddr}, #{mbDeaddr}, #{mbAuthkey})

	</insert>
	
	<update id="update" parameterType="member">

			UPDATE MEMBERS_TB
			SET 
					MB_PW=#{mbPw},
					MB_NM=#{mbNm},
					MB_NICK=#{mbNick},
					MB_PHONE=#{mbPhone},
					MB_EMAIL=#{mbEmail},
					MB_ZIP=#{mbZip}, 
					MB_ADDR=#{mbAddr},
					MB_DEADDR=#{mbDeaddr} 
			WHERE MB_ID=#{mbId}

	</update>
	
	<select id="getMemberList" resultType="member">

			SELECT *
			FROM
			(
				SELECT M.*, ROW_NUMBER() OVER(ORDER BY MB_ID DESC) AS RNUM
				FROM MEMBERS_TB M
				WHERE 1=1

				<include refid="search"></include>		

			)
			WHERE RNUM BETWEEN #{pageStart} AND (#{pageStart} + #{perPageNum} - 1)

	</select>
	
	<select id="countMemberList" resultType="int">

			SELECT COUNT(*)
			FROM MEMBERS_TB
			WHERE 1=1

			<include refid="search"></include>
		
	</select>
	
	<delete id="deleteMember">

			DELETE FROM MEMBERS_TB
			WHERE MB_ID=#{mbId}

	</delete>
	
	<select id="getAllMembers" resultType="member">

			SELECT
					MB_ID,
				   	MB_PW,
				   	MB_NM,
				   	MB_NICK,
				   	MB_PHONE,
					MB_EMAIL,
					MB_ZIP,
					MB_ADDR,
					MB_DEADDR,
					MB_MILE,
					MB_REGDT,
					MB_CONDT,
					MB_AUTHKEY,
					MB_AUTH
			FROM MEMBERS_TB

	</select>

	<sql id="search">
		<if test="searchType != null">
			<if test="searchType == 'i'.toString()">
				AND MB_ID LIKE CONCAT('%', CONCAT(#{keyword}, '%'))
			</if>
			<if test="searchType == 'n'.toString()">
				AND MB_NM LIKE CONCAT('%', CONCAT(#{keyword}, '%'))
			</if>
			<if test="searchType == 'a'.toString()">
				AND MB_NICK LIKE CONCAT('%', CONCAT(#{keyword}, '%'))
			</if>
		</if>
	</sql>
	
</mapper>